name: Backup DFB - Monthly
description: Backup DFB Django application data and configuration.

on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'Environment'
        required: true
        type: choice
        options:
          - staging
          - production


jobs:

  backup-dfb:

    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    env:
      INFRA_DIR: ${{ vars.INFRA_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@0d99fa3878a334d3e307c1a8372ad55550fdaea7
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
          version: v1.71.0

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 0700 ~/.ssh
          echo "${{ secrets.SSH_KEY }}" >> ~/.ssh/deploy.key
          chmod 0600 ~/.ssh/deploy.key
          ssh-keyscan ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create a backup
        run: |

          eval $(ssh-agent -s) && ssh-add ~/.ssh/deploy.key

          ssh -o ServerAliveInterval=20 -o TCPKeepAlive=no -p ${{ vars.SSH_PORT }} ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} <<EOF
            cd $INFRA_DIR
            docker compose exec dfb-django tar  --exclude='CACHE' -cf - mediafiles > backup.tar
            docker compose exec dfb-django python manage.py dumpdata > database.json
            tar -rf backup.tar database.json
          EOF

          scp -P ${{ vars.SSH_PORT }} ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }}:$INFRA_DIR/backup.tar dfb_backup_$(date +'%Y%m%d').tar

          ssh -p ${{ vars.SSH_PORT }} ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} <<EOF
            cd $INFRA_DIR
            rm backup.tar
          EOF

      - name: Upload backups to OneDrive
        run: |
          rclone copy dfb_backup_$(date +'%Y%m%d').tar onedrive:SWB_Backups/

      - name: Update Rclone config
        uses: AnimMouse/setup-rclone/update-config@0d99fa3878a334d3e307c1a8372ad55550fdaea7
        with:
          rclone_config_secret_name: RCLONE_CONFIG
          token: ${{ secrets.GH_PAT }}
